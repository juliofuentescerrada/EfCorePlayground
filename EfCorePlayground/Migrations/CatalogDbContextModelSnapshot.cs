// <auto-generated />
using EfCorePlayground;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCorePlayground.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.products_id_sequence", "'products_id_sequence', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCorePlayground.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EfCorePlayground.Model.Product", b =>
                {
                    b.OwnsMany("EfCorePlayground.Model.ImageUrl", "_images", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("_value")
                                .IsRequired()
                                .HasColumnName("ImageUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId", "Id");

                            b1.ToTable("ProductImages");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("EfCorePlayground.Model.ProductDetails", "_details", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.OwnsOne("EfCorePlayground.Model.Description", "_description", b2 =>
                                {
                                    b2.Property<int>("ProductDetailsProductId")
                                        .HasColumnType("int");

                                    b2.Property<string>("_value")
                                        .HasColumnName("Description")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProductDetailsProductId");

                                    b2.ToTable("Products");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductDetailsProductId");
                                });

                            b1.OwnsOne("EfCorePlayground.Model.Name", "_name", b2 =>
                                {
                                    b2.Property<int>("ProductDetailsProductId")
                                        .HasColumnType("int");

                                    b2.Property<string>("_value")
                                        .IsRequired()
                                        .HasColumnName("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProductDetailsProductId");

                                    b2.ToTable("Products");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductDetailsProductId");
                                });
                        });

                    b.OwnsMany("EfCorePlayground.Model.Tag", "_tags", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("_value")
                                .IsRequired()
                                .HasColumnName("Tag")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId", "Id");

                            b1.ToTable("ProductTags");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
